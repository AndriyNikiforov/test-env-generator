"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),fs=require("fs-extra"),Git=require("nodegit"),Console=require("console"),zipApi=require("../zipapi/"),GitApi=/*#__PURE__*/function(){function a(){(0,_classCallCheck2.default)(this,a)}return(0,_createClass2.default)(a,[{key:"appiumUpdate",/**
   * @description Clone from git appium skeleton and making zip archive
   */value:function a(){fs.mkdir("./tmp"),Git.Clone(process.env.GIT_REPOSITORY_APPIUM,"./tmp").then(function(a){Console.log("Cloned ",a.workdir()),zipApi.makeArch("appium")}).catch(function(a){return Console.error(a)})}/**
   * @description Clone from git selenium skeleton and making zip archive
   */},{key:"seleniumUpdate",value:function a(){fs.mkdir("./tmp"),Git.Clone(process.env.GIT_REPOSITORY_SELENIUM,"./tmp").then(function(a){Console.log("Cloned ",a.workdir()),zipApi.makeArch("selenium")}).catch(function(a){return Console.error(a)})}/**
   * @description Clone from git webdriver.io skeleton and making zip archive
   */},{key:"webdriverIO",value:function a(){fs.mkdir("./tmp"),Git.Clone(process.env.GIT_REPOSITORY_WEBDRIVER,"./tmp").then(function(a){Console.log("Cloned ",a.workdir()),zipApi.makeArch("webdriverIO")}).catch(function(a){return Console.error(a)})}}]),a}();module.exports=new GitApi;